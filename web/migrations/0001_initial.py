# Generated by Django 5.1.3 on 2024-12-10 14:31

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True, default=0, null=True, verbose_name='Numer kategorii')),
                ('name', models.CharField(db_index=True, max_length=512, verbose_name='Nazwa kategorii')),
                ('slug', models.SlugField(blank=True, max_length=512, null=True, verbose_name='Slug')),
                ('is_active', models.BooleanField(default=True, verbose_name='Czy jest dostępny?')),
            ],
            options={
                'verbose_name_plural': 'Kategorie wydarzeń',
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=140, verbose_name='Nazwa wydarzenia')),
                ('short_description', models.TextField(max_length=840, verbose_name='Krótki opis wydarzenia')),
                ('city', models.CharField(max_length=255, verbose_name='Miasto wydarzenia')),
                ('street', models.CharField(max_length=255, verbose_name='Ulica wydarzenia')),
                ('house_number', models.CharField(max_length=255, verbose_name='Numer domu wydarzenia')),
                ('apartment_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Numer lokalu wydarzenia')),
                ('show_on_map', models.CharField(max_length=255, verbose_name='Pokaż na mapie')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis wydarzenia')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='events/main_images/', verbose_name='Zdjęcie główne')),
                ('gallery_image_1', models.ImageField(blank=True, null=True, upload_to='events/gallery_images/', verbose_name='Zdjęcie galerii 1')),
                ('gallery_image_2', models.ImageField(blank=True, null=True, upload_to='events/gallery_images/', verbose_name='Zdjęcie galerii 2')),
                ('gallery_image_3', models.ImageField(blank=True, null=True, upload_to='events/gallery_images/', verbose_name='Zdjęcie galerii 3')),
                ('gallery_image_4', models.ImageField(blank=True, null=True, upload_to='events/gallery_images/', verbose_name='Zdjęcie galerii 4')),
                ('is_one_day', models.BooleanField(default=True, verbose_name='Jednodniowe')),
                ('one_day_date', models.DateField(blank=True, null=True, verbose_name='Data wydarzenia')),
                ('is_multi_day', models.BooleanField(default=False, verbose_name='Kilku dniowe')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Data rozpoczęcia')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Data zakończenia')),
                ('is_recurring', models.BooleanField(default=False, verbose_name='Wydarzenie cykliczne')),
                ('recurring_type', models.CharField(blank=True, choices=[('weekly', 'Co tydzień'), ('biweekly', 'Co 2 tygodnie'), ('irregular', 'Nieregularne')], max_length=20, null=True, verbose_name='Typ cykliczności')),
                ('recurring_dates', models.JSONField(blank=True, help_text='Lista nieregularnych dat wydarzeń', null=True, verbose_name='Daty nieregularne')),
                ('recurring_days', models.JSONField(blank=True, help_text="Lista dni tygodnia (np. ['Poniedziałek', 'Piątek'])", null=True, verbose_name='Dni tygodnia (dla cyklicznych)')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Strona www')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Adres e-mail')),
                ('location_type', models.CharField(blank=True, choices=[('inside', 'Wewnątrz'), ('outside', 'Na zewnątrz')], max_length=20, null=True, verbose_name='Gdzie')),
                ('entry_type', models.CharField(blank=True, choices=[('free', 'Wolny'), ('paid', 'Płatny')], max_length=20, null=True, verbose_name='Wstęp')),
                ('added_by', models.CharField(choices=[('organizer', 'Organizatora'), ('participant', 'Uczestnika')], max_length=20, verbose_name='Dodane przez')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Lokalizacja (szerokość i długość geograficzna)')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ostatniej aktualizacji')),
                ('categories', models.ManyToManyField(related_name='events', to='web.category', verbose_name='Rodzaj')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utworzone przez')),
            ],
            options={
                'verbose_name': 'Wydarzenie',
                'verbose_name_plural': 'Wydarzenia',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['name'], name='idx_event_name'), models.Index(fields=['created_at'], name='idx_event_created_at')],
            },
        ),
    ]
